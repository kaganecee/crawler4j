description 'crawler4j: Open Source Web Crawler for Java'

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven-publish'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

configurations.all {
    it.exclude group: 'commons-logging'
    it.exclude group: 'log4j'
    it.exclude group: 'org.apache.logging.log4j'
}

dependencies {
    implementation 'edu.uci.ics:crawler4j:4.4.0'
    implementation 'org.slf4j:slf4j-api:1.7.26'
    implementation 'org.slf4j:jcl-over-slf4j:1.7.26'
    implementation 'org.slf4j:jul-to-slf4j:1.7.26'
    implementation 'org.apache.httpcomponents:httpclient:4.5.7'
    implementation 'com.sleepycat:je:18.3.12'
    implementation ('org.apache.tika:tika-parsers:1.20') {
        exclude group: 'org.apache.poi', module: 'poi-ooxml'
        exclude group: 'org.apache.poi', module: 'poi-scratchpad'
        // Exclude other modules as needed
    }
    implementation 'io.github.pgalbraith:url-detector:0.1.20'
    implementation 'com.google.guava:guava:27.0.1-jre'
    implementation 'de.malkusch.whois-server-list:public-suffix-list:2.2.0'
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.3'

    testImplementation 'junit:junit:4.2'
    testImplementation 'com.github.tomakehurst:wiremock:2.21.0'
    testImplementation 'org.codehaus.groovy:groovy-all:2.5.6'
    testImplementation 'org.spockframework:spock-core:1.2-groovy-2.5'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            from components.java

            artifact sourcesJar
            artifact javadocJar

            // Sign the pom
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
                pomFile.delete()
            }

            // Sign the artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username "$sonatypeUsername"
                password "$sonatypePassword"
            }
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        root.dependencies.removeAll { dep ->
            dep.scope == 'test'
        }

        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            name 'crawler4j'
            description 'crawler4j: Open Source Web Crawler for Java'
            url 'https://github.com/yasserg/crawler4j'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
            developers {
                developer {
                    id 'yasserg'
                    name 'Yasser Ganjisaffar'
                }
            }
            scm {
                connection 'scm:git:git@github.com:yasserg/crawler4j.git'
                developerConnection 'scm:git:git@github.com:yasserg/crawler4j.git'
                url 'https://github.com/yasserg/crawler4j'
            }
        }
    }
}

model {
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn(project.tasks.signArchives)
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn(project.tasks.signArchives)
    }
}
